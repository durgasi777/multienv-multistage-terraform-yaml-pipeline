# Terraform release pipeline for Mezz-Design Studio AppService Environments
name: $(Year:yyyy).$(Date:MMdd).$(rev:rr)-$(Build.SourceBranchName)

#Run time parameters
parameters:
- name: deployTo
  displayName: Select the Mezz-Design Studio-Environment To run Terraform update
  type: string
  default: kktest
  values:
  - kktest
  - dev
  - prod
- name: tf_update
  displayName: Select the type of Terraform update you want to perform
  type: string
  values:
  - Plan
  - Apply
  - Destroy

# Set variables once
variables:
  vmImageName: 'ubuntu-latest'
  PROJECT_PATH: '$(System.DefaultWorkingDirectory)/Terraform'
  tfComponent: 'Dev'
  tfExecutionDir: '$(PROJECT_PATH)/$(tfComponent)'
  terraformVersion: '0.13.5'
  serviceConnectionName: 'kkazureserviceconn'
  backendAzureRmResourceGroupName: 'rg-terraformstate'
  backendAzureRmStorageAccountName: 'krishterrastatestorage'
  backendAzureRmContainerName: 'terraformdemo'
  backendAzureRmKey: 'terraform.tfstate'
  tfVarFileName: '$(tfExecutionDir)/dev.tfvars'

# Terraform instructions
stages:
- stage: TerraformPlan
  displayName: 'Terraform Plan'
  jobs:
  - deployment : Terraform_Init_And_Plan
    displayName: Terraform Initialize &Plan
    continueOnError: 'false'
    environment: ${{ parameters.deployTo }}-Design-Studio-AppServicePlan
    pool:
      vmImage: '$(vmImageName)'
  # Runs If Terraform Plan or Apply
  - ${{ if ne(parameters.tf_update, 'Destroy') }}:
    - job: Terraform_Plan
      steps:
      - template: templates/tf-plan-steps.yml
  # Runs Terraform Destroy - DryRun Only
  - ${{ if eq(parameters.tf_update, 'Destroy') }}:
    - job: Terraform_Destroy_Plan
      steps:
      - template: templates/tf-destroy-plan-steps.yml

#Terraform Actions (instructions) with Approval checks in ADO
- stage: TerraformUpdate
  dependsOn: TerraformPlan
  condition: and(not(failed('TerraformPlan')), ${{ ne(parameters.tf_update, 'Plan') }})
  jobs:
  - deployment: Terraform_Infrastructure_Update
    displayName: Terraform Update
    continueOnError: 'false'
    environment: ${{ parameters.deployTo }}-Design-Studio-AppServiceWithApproval
    pool:
      vmImage: '$(vmImageName)'
  - ${{ if eq(parameters.tf_update, 'Apply') }}:
    - job: Terraform_Apply
      steps:
      - template: templates/tf-apply-steps.yml

  - ${{ if eq(parameters.tf_update, 'Destroy') }}:
    - job: Terraform_Destroy
      steps:
      - template: templates/tf-destroy-steps.yml
